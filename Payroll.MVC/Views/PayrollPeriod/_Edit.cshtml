@model Payroll.ViewModel.PayrollPeriodViewModel

@{ 
    Layout = "";
}

@using (Html.BeginForm("Edit", "PayrollPeriod", FormMethod.Post, new { id = "edit-form", name = "edit-form" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.PeriodYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PeriodYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PeriodYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PeriodMonth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PeriodMonth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PeriodMonth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeginDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BeginDate, new { htmlAttributes = new { @class = "form-control datepicker", @Value = Model.BeginDate.ToString("dd MMM yyyy") } })
                @Html.ValidationMessageFor(model => model.BeginDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control datepicker", @Value = Model.EndDate.ToString("dd MMM yyyy") } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsCurentPeriod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCurentPeriod)
                    @Html.ValidationMessageFor(model => model.IsCurentPeriod, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActivated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActivated)
                    @Html.ValidationMessageFor(model => model.IsActivated, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    Cancel
                </button>
            </div>
        </div>
    </div>
}

    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(".datepicker").datepicker({
        format: 'dd M yyyy'
    })
    $("#edit-form").submit(function () {
        $.ajax({
            url: '@Url.Action("Edit","PayrollPeriod")',
            type: this.method,
            data : $(this).serialize(),
            success: function (result) {
                if (result.success) {
                    $("#modal-Form").modal("hide");
                    ShowList(); // refresh, memanggil #table-list
                }
                else {
                    alert("Error : " + result.message);
                }

            }
        })
        return false;
    })

</script>


